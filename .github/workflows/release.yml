name: Go Release

on:
  push:
    tags:
      - 'v*' # Trigger on tags starting with 'v'

jobs:
#   build-windows:
#     strategy:
#       matrix:
#         arch: [amd64, arm64]
#     runs-on: windows-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Go
#         uses: actions/setup-go@v4
#         with:
#           go-version: '^1.23'

#       - name: Build project
#         run: |
#           $env:GOOS = "windows"
#           $env:GOARCH = "${{ matrix.arch }}"
#           go build -o gofs-windows-${{ matrix.arch }}.exe

#       - name: Upload binaries to release
#         uses: actions/upload-artifact@v4
#         with:
#           name: gofs-windows-${{ matrix.arch }}
#           path: gofs-windows-${{ matrix.arch }}.exe

  build-linux:
    strategy:
      matrix:
        arch: [amd64, arm64]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.23'

      - name: Build project
        run: |
          GOOS=linux GOARCH=${{ matrix.arch }} go build -o gofs-linux-${{ matrix.arch }}
      
      - name: Archive binary
        run: |
          tar -czvf gofs-linux-${{ matrix.arch }}.tar.gz gofs-linux-${{ matrix.arch }}

      - name: Upload binaries to release
        uses: actions/upload-artifact@v4
        with:
          name: gofs-linux-${{ matrix.arch }}
          path: gofs-linux-${{ matrix.arch }}.tar.gz

#   build-macos:
#     strategy:
#       matrix:
#         arch: [amd64, arm64]
#     runs-on: macos-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Go
#         uses: actions/setup-go@v4
#         with:
#           go-version: '^1.23'

#       - name: Build project
#         run: |
#           GOOS=darwin GOARCH=${{ matrix.arch }} go build -o gofs-darwin-${{ matrix.arch }}

#       - name: Upload binaries to release
#         uses: actions/upload-artifact@v4
#         with:
#           name: gofs-darwin-${{ matrix.arch }}
#           path: gofs-darwin-${{ matrix.arch }}

  create-release:
    # needs: [build-windows, build-linux, build-macos]
    needs: build-linux
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Retrieve tag version
        id: ref
        run: |
          echo "version=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./

      - name: List files
        run: ls -rl

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.ref.outputs.version }}
          name: Release ${{ steps.ref.outputs.version }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false
          files: |
            ./*.tar.gz



    #   - name: Upload release assets
    #     uses: actions/upload-release-asset@v1
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       upload_url: ${{ steps.create_release.outputs.upload_url }}
    #       asset_path: ./gofs-*
    #       asset_name: 