name: Build and Release

on:
    push:
        tags:
            - '*'


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.23]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Build
      run: |
        go build

    - name: Archive executable (Windows)
      if: startsWith(matrix.os, 'windows')
      run: |
        Compress-Archive -Path gofs.exe -DestinationPath gofs-${{ matrix.os }}.zip

    - name: Archive executable (Unix)
      if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')
      run: |
        tar -czvf gofs-${{ matrix.os }}.tar.gz gofs

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: gofs-${{ matrix.os }}
        path: gofs-${{ matrix.os }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: gofs-ubuntu-latest
        path: ./artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/gofs-ubuntu-latest.*
        asset_name: gofs-ubuntu-latest.tar.gz
        asset_content_type: application/gzip
